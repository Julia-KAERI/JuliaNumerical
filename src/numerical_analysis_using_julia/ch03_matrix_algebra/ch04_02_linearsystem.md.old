# 선형 시스템 풀기

$n\times n$ 행렬 $\mathbf{A}$ 와 $n$ 차원 벡터 $\mathbf{b}$ 에 대해  $\mathbf{Ax}=\mathbf{b}$ 를 만족하는 $n$ 차원 벡터 $\mathbf{x}$ 를 찾는 문제이다. 관행적으로 많은 경우 $\mathbf{A}\backslash \mathbf{b}$ 로 표기하며 Julia 에서는 `\` 연산자로 `A\b` 와 같이 하여 `Ax=b` 를 만족하는 벡터 `x` 를 구할 수 있다.

우리는 앞서 가우스 소거법과 LU(PLU) 분해를 이용하여 이것을 풀었다. `LinearAlgebra` 모듈은 `lu()` 함수로 PLU 분해를 제공한다. 그러나 $\mathbf{A}$ 가 특별한 성질을 만족하는 행렬일 경우, 더 빠르고 정확하게 푸는 방법이 있다. 모두 $\mathbf{A}$ 를 특별한 형태의 행렬의 곱으로 분해하는 방법에 의존한다.

| 행렬의 특징 | 정의 | 특이사항 |
|:------:|:------:|:------:|
| Diagonal | $i\ne j\implies A_{ij}=0$ | |
| Toeplitz matrix | $1\le i, j \le n \implies A_{ii}=A_{jj}$  | 모든 대각 성분이 동일 |
| Circulant matrix | (아래 참고)  | Toeplizt matrix 에 포함된다. 역행렬이 존재하지 않음.|
| 대칭 (Symmetric) | $\mathbf{A} = \mathbf{A}^{T}$ |
| Hermitian | $\mathbf{A} = \mathbf{A}^{\dagger}$|
| Positive definite | $\mathbf{A}$ 의 모든 eigenvalue 의 실수값이 양수 | |
| Banded | (아래 참고) | |

</br>

## 다양한 행렬들

### Circulant Matrix

주어진 $A_{1, j},\, j=1,\ldots,\, n$ 에 대해, $A_{i j} = \left\{\begin{array}{ll} A_{i-1, j-1}  & \text{if } i \ne 1 \\ A_{n, j-1} & \text{if } i = 1\end{array} \right.$ 일 경우 circulant matrix 라 한다. 예를 들어 `A` 의 첫번째 행이 `[1 2 3 4]` 이면 두번째 행은 `[2 3 4 1]`, 세번째 행은 `[3 4 1 2]`, 네번째 행은 `[4 1 2 3]` 이 된다. 즉 그 전 행에서 한 열씩 오른쪽으로 쉬프트 되고 전 행의 마지막 성분이 이 행의 첫번째 성분이 된다. 따라서 첫번째 행이 정해지면 모든 행렬이 정해진다.

</br>

### LU 분해, PLU 분해

$n \times n$ 행렬 `A` 에 대한 LU 분해는 `lu` 함수를 이용하여 구한다. 그 prototype 은 다음과 같다.

```julia
lu(A, pivot = RowMaximum(); check = true) -> F::LU
```

`pivot = RawMaximum()` 이면 우리가 했던 PLU 분해를 수행하며 `pivot = NoPivot()` 이면 LU 분해를 수행한다. `lu` 의 `help` 에 제시된 보기는 다음과 같다.

LU 분해에서

```sh
julia> A = [4 3; 6 3]
2×2 Matrix{Int64}:
 4  3
 6  3

julia> F = lu(A)
LU{Float64, Matrix{Float64}, Vector{Int64}}
L factor:
2×2 Matrix{Float64}:
 1.0       0.0
 0.666667  1.0
U factor:
2×2 Matrix{Float64}:
 6.0  3.0
 0.0  1.0

julia> F.L * F.U == A[F.p, :]
true

julia> l, u, p = lu(A); # destructuring via iteration

julia> l == F.L && u == F.U && p == F.p
true
```

</br>

## QR 분해

`qr` 함수의 prototype 음 다음과 같다.

```julia
  qr(A, pivot = NoPivot(); blocksize) -> F
```

</br>

### 에르미트 행렬 (Hermitian matrix)

복소 정사각 행렬 $\mathbf{A}$ 가 $\mathbf{A} = \mathbf{A}^\dagger$ 일 때 $\mathbf{A}$ 를 에르미트 행렬(Hermitian matrix) 혹은 self-adjoint matrix 라 한다. $\mathbf{A}$ 가 에르미트 행렬일 때 다음과 같은 성질을 가진다.

1. $\mathbf{x} \in \mathbb{F}^n,\, \mathbf{A} \in \mathbb{F}^{n\times n} \implies \langle \mathbf{x},\, \mathbf{Ax}\rangle  \in \mathbb{R}$, 즉 $\mathbf{A}$ 의 대각성분은 항상 실수이다.
2. $\mathbf{x},\,\mathbf{y} \in \mathbb{F}^n,\, \mathbf{A} \in \mathbb{F}^{n\times n} \implies \langle \mathbf{y},\, \mathbf{Ax}\rangle = \langle \mathbf{Ay},\, \mathbf{x} \rangle $,
3. 어떤 Unitary matrix $\mathbf{U} \in \mathbb{F}^{n \times n}$ 에 대해 $\mathbf{U}^{-1}\mathbf{AU}$ 은 대각행렬이다. 이렇게 구한 대각행렬의 대각성분은 실수이며, $\mathbf{A}$ 의 eigenvalues 이다.  

$\mathbf{A}$ 가 실행렬일 때 $\mathbf{A}$ 가 대칭행렬 이라는 조건은 $\mathbf{A}$ 가 에르미트 행렬이라는 조건과 동치라는 것을 쉽게 보일 수 있을 것이다.

</br>

## Cholesky decomposition and LDL decomposition

행렬 $\mathbf{A}$ 가 에르미트 행렬이며(실행렬의 경우 대칭행렬이며) 그 고유값이 양수일 때(이를 positive definite 라 한다),  $\mathbf{A}$ 를 Cholesky 행렬이라 한다. Cholesky 행렬은 어떤 대각성분이 실수인 하삼각 행렬 $\mathbf{L}$ 에 대해 $\mathbf{A}=\mathbf{LL}^{\dagger}$ 로 분해 할 수 있다. 이를 **Cholesky 분해(Cholesky decomposition)** 이라 한다.

$\mathbf{A}$ 가 $n \times n$ 행렬이라 하자. $\mathbf{L}$ 은 하삼각행렬 이므로 $1\le j<i\le n$ 에 대해 $L_{ij}=0$ 이다.

$$
\begin{aligned}
A_{ij} & = \sum_{k=1}^n L_{ik}(\mathbf{L}^{\dagger})_{kj} = \sum_{k=1}^n L_{ik}\overline{L_{jk}} = \sum_{k=1}^{\min\{i,\, j\}} L_{ik}\overline{L_{jk}}
\end{aligned}
$$

이다. $L_{ii} \in \mathbb{R}$ 이므로, $L_{11} = \sqrt{A_{ij}}$ 임을 안다.

우리가 1 열부터 $m$ 열까지의 모든 $L_{ij}$ 를 안다고 하자.

$$
\begin{aligned}
A_{m+1,1} &= L_{m+1, 1}\overline{L_{1 1}}, \\
A_{m+1, 2} &= L_{m+1, 1}\overline{L_{2 1}} + L_{m+1, 2} \overline{L_{22}} \\
{}& \vdots \\
A_{m+1, j\le m} &= L_{m+1,\,1}\overline{L_{j, 1}}  + \cdots + L_{m+1, j} \overline{L_{j, j}}\\
{}& \vdots \\
A_{m+1, m+1} &= L_{m+1, 1}\overline{L_{m+1, 1}} + L_{m+1, 2}\overline{L_{m+2, 2}} + \cdots + L_{m+1, m}\overline{L_{m+1, m}} + L_{m+1, m+1}^2
\end{aligned}
$$

이므로

$$
\begin{aligned}
L_{m+1, 1} &= \dfrac{A_{m+1, 1}}{L_{11}} \\
L_{m+1, 2} & = \dfrac{1}{\overline{L_{22}}}\left( A_{m+1, 2} -  L_{m+1, 1} \overline{L_{21}}  \right)\\
& \vdots \\
L_{m+1, j\le m} &=  \dfrac{1}{\overline{L_{jj}}} \left (A_{m+1, j} - \sum_{k=1}^{j-1} L_{m+1, j} \overline{L_{j, k}} \right)\\
& \vdots \\
L_{m+1, m+1} & = \sqrt{A_{m+1, m+1} - \sum_{k=1}^{m} L_{m+1, k}\overline{L_{m+1, k}}} = \sqrt{A_{m+1, m+1}-\sum_{k=1}^m |L_{m+1, k}|^2}
\end{aligned}
$$

이다. 즉 우리는 $\mathbf{L}$ 의 $m+1$ 행을 결정 할 수 있다. $\mathbf{L}$ 의 대각성분을 보면 알겠지만 식에 의해 음이 아닌 실수이거나 순허수이다. 여기서는 증명을 하지 않겠지만, 실제로는 양의 실수이다.

</br>

### LDL  분해

앞에서 구한 $\mathbf{L}$ 을 대각성분이 1인 하삼각행렬 $\mathbf{L}'$ 과 대각행렬 $\mathbf{D}_0$ 의 곱으로 표현해보자. $L'_{ij}=L_{ij}/L_{jj},\, (D_0)_{ij} = \delta_{ij}L_{ij}$ 라 하면,

$$
(\mathbf{L'}\mathbf{D}_0)_{ij} = \sum_{k=1}^n L'_{ik}(D_0)_{kj}= \sum_{k=1}^n \dfrac{1}{L_{jj}}L_{ik} \delta_{kj}L_{{kj }} = L_{ik}
$$

이므로 $\mathbf{L}'\mathbf{D}_0=\mathbf{L}$ 이다. 또한 $\mathbf{L}^{\dagger} = (\mathbf{D}_0)^\dagger (\mathbf{L}')^\dagger$ 이므로,

$$
\mathbf{A} = \mathbf{L'}\mathbf{D}_0 (\mathbf{D}_0)^\dagger (\mathbf{L}')^\dagger
$$

가 된다. $\mathbf{D}_0$ 가 대각행렬이므로 $D_{0}(D_0)^\dagger$ 는 대각성분이 실수인 대각행렬이 된다. $\mathbf{L}'$ 이 대각성분이 $1$ 인 하삼각행렬이다. $\mathbf{D}=\mathbf{D}_0(\mathbf{D}_0)^\dagger$ 라 하고, 하삼각행렬 $\mathbf{L}'$ 을 $\mathbf{L}$ 로 바꾸면,

$$
\mathbf{A}=\mathbf{LDL}^\dagger
$$

가 된다. 실행렬에서는,

$$
\mathbf{A}=\mathbf{LDL}^T
$$

이다.
