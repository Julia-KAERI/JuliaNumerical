---
title: "tikz in Quarto"

number-sections: true
number-depth: 2
crossref:
  chapters: false

---



```{r, engine = 'tikz'}
#| label: fig-tikz_first_exam
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-align: center
#| fig-cap: "tikz in Quarto 예시"

\usetikzlibrary{arrows}
\usetikzlibrary{positioning}
\usetikzlibrary{calc}
\usetikzlibrary{arrows.meta}
\usetikzlibrary{decorations.pathreplacing}

\begin{tikzpicture}
\draw (0,0)node(a){} -- (10,0) node (b) {} ;
\foreach \x in  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10} % edit here for the vertical lines
\draw[shift={(\x,0)},color=black] (0pt,3pt) -- (0pt,-3pt);
\foreach \x in {0, 0.2, 0.4, 0.6, 0.8, 1} % edit here for the numbers
\draw[shift={(\x*10,0)},color=black] (0pt,0pt) -- (0pt,-3pt) node[below]
{$\x$};
\node at (8, 0.5) (eq1) {$\textcolor{red}{\boldsymbol{SQ}}$};
\node at (4, 0.5) (eq2) {$\textcolor{purple}{\boldsymbol{G_i(0)}}$}; 
\node at (7, 0.5) (eq2) {$\textcolor{purple}{\boldsymbol{G_i(1)}}$}; 
\node at (3, 0.5) (eq3) {$\textcolor{blue}{\boldsymbol{P}}$};
\node at (0, 0.5) (eq4) {$\textcolor{black}{\boldsymbol{x_i}}$};
\draw[decorate, decoration={brace, amplitude=6pt, mirror},] ([yshift=0.5cm]4,0.5)-- node[above=0.25cm]
{\shortstack{Text}}([yshift=0.5cm]3,0.5);
\draw[decorate, decoration={brace, amplitude=6pt},] ([yshift=-1cm]7,0)-- node[below=0.25cm]
{\shortstack{Text}}([yshift=-1cm]3,0);
\end{tikzpicture}
```

</br>

## 기본 예제

### 직선 

다음은 교차하는 직선과 교점을 그린 것이다.

```{r, engine = 'tikz'}
#| label: fig-tikz_2
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 2
#| fig-align: center
#| fig-cap: "tikz 2"

\begin{tikzpicture}[scale=1.0]
\draw[gray] (-1,2) -- (2,-4);
\draw[red, thick] (-1,-1) -- (2,2);
\filldraw[black] (0,0) circle (2pt) node[anchor=west]{Intersection point};
\end{tikzpicture}
```

- `\draw[gray](-1, 2) -- (2, -4);` 는 $(-1, 2)$ 에서 $(2, -4)$ 까지 회색(gray) 의 직선을 그으라는 명령어이다. 
  
- `\draw[red, thick] (-1,-1) -- (2,2);` 는 주어진 좌표간의 빨갛고(red), 두꺼운(thick) 직선을 그으라는 의미이다.

- `\filldraw[black] (0,0) circle (2pt) node[anchor=west]{Intersection point};` 는 $(0, 0)$ 에 반지름 2 인 속이 꽉 찬 원을 그리며, $(0, 0)$ 을 서쪽으로 두는 문자열 `Intersection point` 를 출력하라는 의미이다. 

</br>

### 그리드와 직선의 두께

```{r, engine = 'tikz'}
#| label: fig-tikz_2_2
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 2
#| fig-align: center
#| fig-cap: "그리드와 직선의 두께"

\begin{tikzpicture}
    \draw[gray, very thick] (0,0) grid (4,3);
    \draw[blue, dashed] (0,0) -- (1,2) -- (3,3) -- (4,2);
    \draw[red, ->, thick] (2,0) -- (3.5,2.5);
\end{tikzpicture}
```

- `\draw[gray, very thick] (0,0) grid (4,3);` 는 $(0, 0)$ 부터 $(4, 3)$ 까지 가로, 세로 1 간격의 그리드를 회색(gray) 의 두꺼운 선(very thick) 으로 그린다. 
- `draw[blue, dashed] (0,0) -- (1,2) -- (3,3) -- (4,2);` 는 이어지는 파선(dashed) 을 파란 색으로 그린다.
- `\draw[red, ->, thick] (2,0) -- (3.5,2.5);` 는 끝점에 화살표가 있는 빨간 선을 두껍게(thick) 그린다.

</br>

### 닫힌 선분

```{r, engine = 'tikz'}
#| label: fig-tikz_2_3
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 2
#| fig-align: center
#| fig-cap: "닫힌 선분"

\begin{tikzpicture}
    \draw[green, thick] (0,0) -- (1,2) -- (3,3) -- (3,-1)--cycle;
\end{tikzpicture}
```

- `\draw[green, thick] (0,0) -- (1,2) -- (3,3) -- (3,-1)--cycle;` 에서 `--cycle` 은 이 앞의 `(3, -1)` 을 맨 앞의 `(0, 0)` 과 연결시키라는 의미이다.

</br>


### 곡선

다음은 곡선을 그린 것이다.

```{r, engine = 'tikz'}
#| label: fig-tikz_3
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 2
#| fig-align: center
#| fig-cap: "tikz 3"

\begin{tikzpicture}[scale=1.0]
\draw (-2,0) -- (2,0);
\filldraw [blue] (0,0) circle (2pt);
\draw[cyan] (-2,-2) .. controls (0,0) .. (2,-2);
\draw[magenta] (-2,2) .. controls (-1,0) and (1,0) .. (2,2);

\end{tikzpicture}
```

- `\draw[magenta] (-2,2) .. controls (-1,0) and (1,0) .. (2,2);` 는 $(-2, 2)$ 와 $(2, 2)$ 를 끝점으로 하고 $(-1, 0)$ 과 $(1, 0)$ 을 제어점으로 하는 사차 베지어 곡선을 magenta 색으로 그린다. 
- `\draw[cyan] (-2,-2) .. controls (0,0) .. (2,-2);` 는 ($-2, 2)$ 와 $(2, 2)$ 를 끝점으로 하고 제어점이 $(0, 0)$ 인 사차 베지어 곡선을 cyan 색으로 그린다. 즉 `\draw[magenta] (-2,2) .. controls (0,0) and (0,0) .. (2,2);` 과 같다.

</br>

### 함수

```{r, engine = 'tikz'}
#| label: fig-tikz_4
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 4
#| fig-align: center
#| fig-cap: "tikz 3"
\begin{tikzpicture}[domain=0:4]
  \draw[very thin,color=gray] (-0.1,-1.1) grid (3.9,3.9);

  \draw[->] (-0.2,0) -- (4.2,0) node[right] {$x$};
  \draw[->] (0,-1.2) -- (0,4.2) node[above] {$f(x)$};

  \draw[color=red]    plot (\x,\x)             node[right] {$f(x) =x$};
  % \x r means to convert '\x' from degrees to _r_adians:
  \draw[color=blue]   plot (\x,{sin(\x r)})    node[right] {$f(x) = \sin x$};
  \draw[color=orange] plot (\x,{0.05*exp(\x)}) node[right] {$f(x) = \frac{1}{20} e^x$};
\end{tikzpicture}
```

- `\begin{tikzpicture}[domain=0:4]` 에서 `[domain=0:4]` 은 함수를 사용할 때 $[0, 4]$ 구간을 사용한다는 의미이다.
- `\draw[color=red] plot (\x,\x) node[right] {$f(x) =x$};` 팔간색 선으로 $y=x$ 그래프를 그리며 끝점의 오른쪽에 $f(x)=x$ 라는 문자열을 넣으라는 의미.

</br>

### 도형

#### Shade 

```{r, engine = 'tikz'}
#| label: fig-tikz_shade
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 6
#| fig-align: center
#| fig-cap: "tikz shade"


\begin{tikzpicture}[scale = 3, rounded corners,ultra thick]
  \shade[top color=yellow,bottom color=black] (0,0) rectangle +(2,1);
  \shade[left color=yellow,right color=black] (3,0) rectangle +(2,1);
  \shadedraw[inner color=yellow,outer color=black,draw=yellow] (6,0) rectangle +(2,1);
  \shade[ball color=green] (9,.5) circle (.5cm);
\end{tikzpicture}
```


```{r, engine = 'tikz'}
#| label: fig-tikz_shade2
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 3
#| fig-align: center
#| fig-cap: "tikz shade"


\begin{tikzpicture}[scale=3]
  \clip (-0.1,-0.2) rectangle (1.1,0.75);
  \draw[step=.5cm,gray,very thin] (-1.4,-1.4) grid (1.4,1.4);
  \draw (-1.5,0) -- (1.5,0);
  \draw (0,-1.5) -- (0,1.5);
  \draw (0,0) circle (1cm);
  \filldraw[fill=green!20,draw=green!50!black] (0,0) -- (3mm,0mm) arc
  (0:30:3mm) -- cycle;
  \draw[red,very thick]  (30:1cm) -- +(0,-0.5);
  \draw[blue,very thick] (30:1cm) ++(0,-0.5) -- (0,0);
\end{tikzpicture}
```


</br>

### 좌표계


```{r, engine = 'tikz'}
#| label: fig-tikz_co_1
#| code-fold: true
#| echo: fenced
#| output: asis
#| fig-width: 2
#| fig-align: center
#| fig-cap: "좌표계"
\begin{tikzpicture}
  \draw [red,->](0,0) -- (xyz cs:x=2) node[right, black] {$x$};
  \draw [green,->](0,0) -- (xyz cs:y=2) node[right, black] {$y$};
  \draw [blue,->](0,0) -- (xyz cs:z=2) node[right, black] {$z$};

  \draw [red, thick, ->] (0, 0) -- (xyz cs:x=2, y=2, z=1);
  \draw [red, dashed] (xyz cs:x=2, y=2, z=1) -- (xyz cs:x=0, y=2, z=1);
\end{tikzpicture}
```

```{r, engine = 'tikz'}
#| label: fig-rotation_of_vector
#| code-fold: true
#| echo: fenced
#| fig-width: 6
#| output: asis
#| fig-align: center
#| fig-cap: "두 좌표계"

\usetikzlibrary {3d} 
\usetikzlibrary {arrows}
\usetikzlibrary{shapes.geometric}
\begin{tikzpicture} %[=>stealth]
\tikzset{
    partial ellipse/.style args={#1:#2:#3}{
        insert path={+ (#1:#3) arc (#1:#2:#3)}
    }
}
  \draw [->] (0,0) -- (xyz cs:x=3);
  \draw [->] (0,0) -- (xyz cs:y=4.5);
  \draw [->] (0,0) -- (xyz cs:z=3); 
  \draw [dashed] (0.0,3.0) ellipse (1.5 and 0.5);
  \draw [thick, -{stealth}] (0, 0) -- (xyz cs:x=0.7,y=2.55);
  \node[below, scale=.6] at (0.3, 2.3) {$\boldsymbol{r}_i (q_j)$};
  \draw [thick, -{stealth}] (0, 0) --(xyz cs:x=1.4,y=2.8);
  \node[scale=.6] at (1.5, 1.7) {$\boldsymbol{r}_i (q_j+dq_j)$};
  \draw [red, thick, -{stealth}] (0.7, 2.55) -- (1.4, 2.8);
  \node[red, scale=.6] at (1.0, 2.5) {$d\boldsymbol{r}_i$};
  \draw [thick, -{stealth}] (0, 3) -- (0, 3.7) node[right, scale=0.6] {$\;\boldsymbol{n}$};

  \draw [teal] (0, 3) -- (0.7, 2.55);
  \draw [teal] (0, 3) -- (1.4, 2.8);
  \draw[teal, ->] (0, 3.0) [partial ellipse=297:340:0.6 and 0.2] node[above, scale=0.6] {$dq_j$} ;
  \draw[purple, ->] (0, 0) [partial ellipse=90:75:1 and 1] node[above left, scale=0.6] {$\theta$} ;
\end{tikzpicture}
```

</br>

### 신호처리 함수

```{r, engine = 'tikz'}
#| label: fig-signal_functions
#| code-fold: true
#| output: asis
#| fig-width: 5
#| fig-align: center
#| fig-cap: "기본적인 신호들"
\usetikzlibrary{arrows}
\begin{tikzpicture}[ >=stealth]


\draw[->] (-2, 0) -- (2, 0) node[below, black] {$x$} ;
\draw[ ->] (0, -0.5) -- (0, 1.5);
\draw[thick] (-2, 0) -- (0, 0) node[below left, black] {$0$} -- (0, 1) node[left, black] {$1$}-- (2, 1) node[above left, black] {$\text{step}(x)$};

\draw[->] (4, 0) -- (8, 0) node[below, black] {$x$} ;
\draw[ ->] (6, -0.5) -- (6, 1.5);
\draw[thick] (4, 0) -- (5.5, 0) node[below, black] {$-\frac{1}{2}$} -- (5.5, 1) -- (6, 1)  -- (6.5, 1)-- (6.5, 0)  node[below, black] {$\frac{1}{2}$} -- (8, 0) node[above left, black] {$\text{rect}(x)$};

\draw[->] (-2, -3) -- (2, -3) node[below, black] {$x$} ;
\draw[ ->] (0, -3.5) -- (0, -1.5);
\draw[thick] (-2, -3) -- (-0.5, -3) node[below, black] {$-\frac{1}{2}$} -- (0, -2) -- (0.5, -3) node[below, black] {$-\frac{1}{2}$} -- (2, -3) node[above left, black] {$\text{tri}(x)$};


\draw[->] (4, -3) node[above right, black] {$\text{sinc}(x)$} -- (8, -3) node[below, black] {$x$} ;
\draw[ ->] (6, -3.5) -- (6, -1.5);
\draw[domain=4.0:8.0, smooth, variable=\x, thick] plot ({\x}, {0.116*sin(500* (\x-6))/((\x-6)) -3 });
\draw (6.36, -2.9) -- (6.36, -3.1) node[below, black] {$\pi$} ; 


\draw[->] (-2, -6) -- (2, -6) node[below, black] {$x$} ;
\draw[ ->] (0, -6.5) -- (0, -4);
\draw[domain=-1.8:1.8, smooth, variable=\x, thick] plot ({\x}, {exp(-(\x)^2) - 6 });
\node[black, right] at (0, -4.7) {$\text{gauss}(x)$};
%\draw (6.36, -2.9) -- (6.36, -3.1) node[below, black] {$\pi$} ; 


\draw[->] (4, -6)  -- (8, -6) node[below, black] {$x$} ;
\draw[ ->] (6, -6.5) -- (6, -4);
\draw[very thick] (4.2, -6) -- (6, -6) -- (6, -4) node[left, black] {$\infty$}-- (6, -6)  -- (7.8, -6) node[above left, black] {$\delta (x)$};

\end{tikzpicture}

```

</br>
